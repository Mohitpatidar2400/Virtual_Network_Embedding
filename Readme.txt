This repository contains the project folder 'VNEmbed' within which there are 2 subfolders -> 
1. 'P3_ALIB_MASTER' - This folder contains the alib tool for scenario generation in the 'alib' subfolder and pickle files in the 'input' subfolder.
2. 'VNE_Input-main' - This folder contains the python files which are interlinked for the implementation of the Virtual Network Embedding problem.

Files in 'VNE_Input-main' folder ->

1. graph.py: This file contain the various parameters used in input picke file.It also contains some predefined graph traversal functions which will be useful for link mapping.

2. vne.py: This file is used to create virtual Network Request according to the parameters - Minimum no. of nodes, Maximum no. of nodes, Total no. of VNR request, Minimum/Maximum node weights, Minimum/Maximum edge weights.

3. graph_extraction.py: This file is used to extract graph from the required pickle file in 'input' subfolder from which the substrate network graph and VNR graph will be generated.

4. input.pickle: Pickle file generated by the graph_extraction.py which contains the substrate network graph and VNR's graph.

5. Print.py: This file is used to print the contents of the input.pickle file into a text file.

6. OutputPickle.txt: Text file generated by the Print.py which displays the contents of input.pickle file.

7. Embed.py: This file contains the implementation of the VNE problem i.e Node and Link mapping of the VNR to Substrate Network.

Dependencies ->

1. Python 3.9
2. Modules - Gurobipy, Networkx, Numpy, pytest, sphinx

Steps to run the project ->

S1. In vne.py: 
	a. We can mention reuiremnets of VNRs like minimum and Maximum number of nodes, total number of reuests in the create_vne Function.
	b. We can set the virtual network requests demand like BandWidth(1,10) ,CRB(CPU)(1,10), Location(0,100), Delay(1,4) in vne.append function. EX: (1, 10, 1, 10, 0, 100, 0, 100, 1, 4)  # for vne request
	c. Run vne.py after doing any modification.

S2 In graph_extraction.py:
	a. In graph.Parameters function we set Physical network resources like BandWidth(1,25) ,CRB(CPU)(1,30), Location(0,100), Delay(1,4). Ex: (1, 25, 1, 30, 0, 100, 0, 100, 1, 1)
	b. In get_graphs function mention the pickle file related to physical network which is available in the 'input' subfolder within 'P3_ALIB_MASTER' folder.
		EX:
 			os.path.join(
            		os.path.dirname(current),
            		"P3_ALIB_MASTER",
            		"input",
            		"senario_KK_N2_arnet.pickle",)
	c. Run graph_extraction.py after doing any modification.

S3. A input.pickle file is created and it will have all the parameters for both physical network and Virtual network request.

S4. Run Print.py to generate the OutputPickle.txt file to read the contents of the Substrate graph and VNR graph from the input.pickle file.

S5. Finally, run the Embed.py to perform the Virtual Network Embedding of the generated VNR's to the Substrate Network.

Input -> Graphs of the Substrate Network and VNR's
Output -> 1. Possible VNR embeddings along with the node mapping and link mapping details.
	  2. Revenue/Cost ratio for each successful VNR embedding and overall acceptance ratio.
