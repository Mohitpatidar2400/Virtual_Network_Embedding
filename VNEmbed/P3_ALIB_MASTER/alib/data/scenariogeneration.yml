request_generator:
     - short_chains:  # some arbitrary identifier for the request generation scheme
         ServiceChainGenerator:
              number_of_requests: [20]
              min_number_of_nodes: [1]
              max_number_of_nodes: [3]
              probability: [0.5]
              latency_factor: [1.0, 1.5]
              node_resource_factor: [1.25, 1.5]
              edge_resource_factor: [1.0]
     - long_chains:
         ServiceChainGenerator:
              number_of_requests: [50]
              min_number_of_nodes: [8]
              max_number_of_nodes: [10]
              probability: [0.2]
              latency_factor: [1.0, 1.5]
              node_resource_factor: [1.25]
              edge_resource_factor: [1.0]

profit_calculator:
     - random:
         RandomEmbeddingProfitCalculator:
              profit_factor: [1.0]
              iterations: [200]
     - optimal:
         OptimalEmbeddingProfitCalculator:
              profit_factor: [1.0]
              iterations: [200]

node_placement:
     - neighbors:
         NeighborhoodSearchRestrictionGenerator:
             potential_nodes_factor: [0.3]

substrate_transformation:
     - uniform:
         SubstrateTransformation_UniformTypeDistribution:
             node_types: [[t1, t2, t3]]   # TODO: Convert values to a tuple internally
             node_capacity: [100.0]
             node_cost: [1.0]
             edge_capacity: [100.0]
             node_type_distribution: [0.3]

substrate_reader:
     - substrates:
        TopologyZooReader:
           topology: [Bellcanada, Chinanet, Geant2012, Uunet]